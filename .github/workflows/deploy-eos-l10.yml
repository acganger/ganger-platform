name: Deploy EOS L10 to Cloudflare Workers

on:
  push:
    branches: [main]
    paths:
      - 'apps/eos-l10/**'
      - 'packages/**'
  workflow_dispatch:

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}

jobs:
  deploy-eos-l10:
    name: Deploy EOS L10
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          cd apps/eos-l10
          pnpm install

      - name: Build packages
        run: |
          # Build shared packages first
          cd packages/auth && pnpm build
          cd ../ui && pnpm build
          cd ../db && pnpm build
          cd ../utils && pnpm build

      - name: Lint EOS L10
        run: |
          cd apps/eos-l10
          pnpm lint
        continue-on-error: true

      - name: Build EOS L10
        run: |
          cd apps/eos-l10
          pnpm build

      - name: Prepare for Workers deployment
        run: |
          cd apps/eos-l10
          pnpm dlx @cloudflare/next-on-pages

      - name: Deploy to Cloudflare Workers
        run: |
          cd apps/eos-l10
          npx wrangler deploy --env production --config wrangler.jsonc --no-routes
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Verify deployment
        run: |
          echo "üéâ EOS L10 worker deployed successfully!"
          echo "‚ö†Ô∏è  Route assignment required manually:"
          echo "1. Visit: https://dash.cloudflare.com/ba76d3d3f41251c49f0365421bd644a5/workers/overview"
          echo "2. Unassign routes from 'ganger-eos-l10-v2'"
          echo "3. Assign routes to 'ganger-l10-staff-v3':"
          echo "   - staff.gangerdermatology.com/l10"
          echo "   - staff.gangerdermatology.com/l10/*"
          echo "üìç Final URL: https://staff.gangerdermatology.com/l10"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ EOS L10 deployment completed successfully"
          else
            echo "‚ùå EOS L10 deployment failed"
          fi