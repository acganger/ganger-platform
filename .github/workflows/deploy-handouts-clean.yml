# Clean working deployment template based on EOS L10 success
name: üöÄ Deploy Handouts

on:
  push:
    branches: [main]
    paths:
      - 'apps/handouts/**'
      - 'packages/**'
  workflow_dispatch:

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}

jobs:
  deploy-handouts:
    name: Deploy Handouts
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          cd apps/handouts
          pnpm install

      - name: Build packages
        run: |
          # Build shared packages first
          cd packages/auth && pnpm build
          cd ../ui && pnpm build
          cd ../db && pnpm build
          cd ../utils && pnpm build

      - name: Lint Handouts
        run: |
          cd apps/handouts
          pnpm lint
        continue-on-error: true

      - name: Build Handouts
        run: |
          cd apps/handouts
          pnpm build

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Prepare for Workers deployment
        run: |
          cd apps/handouts
          pnpm dlx @cloudflare/next-on-pages

      - name: Deploy to Cloudflare Workers
        run: |
          cd apps/handouts
          wrangler deploy --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Verify deployment
        run: |
          echo "üéâ Handouts deployed successfully!"
          echo "üìç URL: https://staff.gangerdermatology.com/handouts"