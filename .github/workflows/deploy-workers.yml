name: üöÄ Ganger Platform - Workers Deployment
# Modern deployment using Cloudflare Workers instead of deprecated Pages

on:
  push:
    branches: [ main, staging, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # ==========================================
  # üèóÔ∏è BUILD ALL APPLICATIONS
  # ==========================================
  build-apps:
    name: üèóÔ∏è Build Applications for Workers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [
          'staff', 'inventory', 'handouts', 'checkin-kiosk', 'eos-l10',
          'medication-auth', 'compliance-training', 'pharma-scheduling',
          'call-center-ops', 'batch-closeout', 'config-dashboard',
          'platform-dashboard', 'socials-reviews', 'integration-status',
          'ai-receptionist'
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build ${{ matrix.app }}
        run: |
          cd apps/${{ matrix.app }}
          pnpm run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_STAFF_URL: https://staff.gangerdermatology.com
          NEXT_PUBLIC_REPS_URL: https://reps.gangerdermatology.com
          NEXT_PUBLIC_KIOSK_URL: https://kiosk.gangerdermatology.com
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.app }}
          path: apps/${{ matrix.app }}/out/
          retention-days: 7

  # ==========================================
  # üì¶ UPLOAD TO R2 STORAGE
  # ==========================================
  upload-assets:
    name: üì¶ Upload Static Assets to R2
    runs-on: ubuntu-latest
    needs: build-apps
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./builds
          
      - name: Setup Wrangler
        run: npm install -g wrangler@latest
        
      - name: Upload assets to R2
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üöÄ Uploading static assets to R2..."
          
          # Create R2 bucket if it doesn't exist
          wrangler r2 bucket create ganger-platform-assets || echo "Bucket exists"
          
          # Upload each app's build artifacts
          for app in staff inventory handouts checkin-kiosk eos-l10 medication-auth compliance-training pharma-scheduling call-center-ops batch-closeout config-dashboard platform-dashboard socials-reviews integration-status ai-receptionist; do
            echo "Uploading $app assets..."
            if [ -d "./builds/build-$app" ]; then
              wrangler r2 object put ganger-platform-assets/$app --file ./builds/build-$app --recursive
            fi
          done

  # ==========================================
  # üåü DEPLOY WORKER TO PRODUCTION
  # ==========================================
  deploy-worker:
    name: üåü Deploy Worker
    runs-on: ubuntu-latest
    needs: upload-assets
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Wrangler
        run: npm install -g wrangler@latest
        
      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd cloudflare-workers
          echo "üöÄ Deploying Ganger Platform Worker..."
          wrangler deploy ganger-platform-worker.js --name ganger-platform --env production
          
      - name: üéâ Deployment Success
        run: |
          echo "üéâ Ganger Platform deployed successfully!"
          echo ""
          echo "üåê Live URLs:"
          echo "   ‚Ä¢ https://staff.gangerdermatology.com (Main Hub)"
          echo "   ‚Ä¢ https://reps.gangerdermatology.com (Pharma Reps)"
          echo "   ‚Ä¢ https://kiosk.gangerdermatology.com (Patient Kiosk)"
          echo ""
          echo "üì± Applications Available:"
          echo "   ‚Ä¢ /inventory ‚Üí Medical Supply Management"
          echo "   ‚Ä¢ /handouts ‚Üí Patient Education"
          echo "   ‚Ä¢ /staffing ‚Üí Clinical Team Optimization"
          echo "   ‚Ä¢ /l10 ‚Üí EOS L10 Management"
          echo "   ‚Ä¢ /meds ‚Üí Medication Authorization"
          echo "   ‚Ä¢ /training ‚Üí Compliance Training"
          echo "   ‚Ä¢ /ops ‚Üí Call Center Operations"
          echo "   ‚Ä¢ /closeout ‚Üí Batch Financial Closeout"
          echo "   ‚Ä¢ /config ‚Üí Configuration Dashboard"
          echo "   ‚Ä¢ /socials ‚Üí Social Media Management"
          echo "   ‚Ä¢ /integrations ‚Üí Integration Status"
          echo "   ‚Ä¢ /ai ‚Üí AI Receptionist Demo"

  # ==========================================
  # ü©∫ HEALTH CHECKS
  # ==========================================
  health-checks:
    name: ü©∫ Health Checks
    runs-on: ubuntu-latest
    needs: deploy-worker
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check Staff Portal
        run: |
          curl -f https://staff.gangerdermatology.com || echo "Will be available after DNS propagation"
          
      - name: Check Reps Portal
        run: |
          curl -f https://reps.gangerdermatology.com || echo "Will be available after DNS propagation"
          
      - name: Check Kiosk Portal
        run: |
          curl -f https://kiosk.gangerdermatology.com || echo "Will be available after DNS propagation"