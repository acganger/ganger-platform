name: üéØ Deploy Single App

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'App to deploy'
        required: true
        type: choice
        options:
          - inventory
          - handouts
          - eos-l10
          - batch-closeout
          - compliance-training
          - clinical-staffing
          - config-dashboard
          - integration-status
          - ai-receptionist
          - call-center-ops
          - medication-auth
          - pharma-scheduling
          - checkin-kiosk
          - socials-reviews
          - component-showcase
          - platform-dashboard
          - staff
      environment:
        description: 'Environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

jobs:
  deploy:
    name: üöÄ Deploy ${{ github.event.inputs.app }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build --filter=@ganger/${{ github.event.inputs.app }}...
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SKIP_ENV_VALIDATION: true

      - name: Set project ID
        id: project_id
        run: |
          case "${{ github.event.inputs.app }}" in
            "inventory") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_INVENTORY }}" >> $GITHUB_OUTPUT ;;
            "handouts") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_HANDOUTS }}" >> $GITHUB_OUTPUT ;;
            "eos-l10") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_EOS_L10 }}" >> $GITHUB_OUTPUT ;;
            "batch-closeout") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_BATCH_CLOSEOUT }}" >> $GITHUB_OUTPUT ;;
            "compliance-training") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_COMPLIANCE_TRAINING }}" >> $GITHUB_OUTPUT ;;
            "clinical-staffing") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_CLINICAL_STAFFING }}" >> $GITHUB_OUTPUT ;;
            "config-dashboard") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_CONFIG_DASHBOARD }}" >> $GITHUB_OUTPUT ;;
            "integration-status") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_INTEGRATION_STATUS }}" >> $GITHUB_OUTPUT ;;
            "ai-receptionist") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_AI_RECEPTIONIST }}" >> $GITHUB_OUTPUT ;;
            "call-center-ops") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_CALL_CENTER_OPS }}" >> $GITHUB_OUTPUT ;;
            "medication-auth") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_MEDICATION_AUTH }}" >> $GITHUB_OUTPUT ;;
            "pharma-scheduling") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_PHARMA_SCHEDULING }}" >> $GITHUB_OUTPUT ;;
            "checkin-kiosk") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_CHECKIN_KIOSK }}" >> $GITHUB_OUTPUT ;;
            "socials-reviews") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_SOCIALS_REVIEWS }}" >> $GITHUB_OUTPUT ;;
            "component-showcase") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_COMPONENT_SHOWCASE }}" >> $GITHUB_OUTPUT ;;
            "platform-dashboard") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_PLATFORM_DASHBOARD }}" >> $GITHUB_OUTPUT ;;
            "staff") echo "project_id=${{ secrets.VERCEL_PROJECT_ID_STAFF }}" >> $GITHUB_OUTPUT ;;
            *) echo "Error: Unknown app ${{ github.event.inputs.app }}"; exit 1 ;;
          esac

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ steps.project_id.outputs.project_id }}
          vercel-args: ${{ github.event.inputs.environment == 'production' && '--prod' || '' }}
          working-directory: apps/${{ github.event.inputs.app }}
          scope: ${{ secrets.VERCEL_TEAM_ID }}

      - name: Deployment Summary
        run: |
          echo "‚úÖ Deployment Complete!"
          echo "App: ${{ github.event.inputs.app }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "URL: ${{ steps.deploy.outputs.url }}"
          echo ""
          echo "üîó Deployment URL: ${{ steps.deploy.outputs.url }}"

      - name: Update Staff Portal (if not deploying staff itself)
        if: github.event.inputs.app != 'staff' && github.event.inputs.environment == 'production'
        run: |
          echo "üìù Note: You may need to update the staff portal rewrites if this is a new deployment URL"
          echo "Run the 'Update Staff Portal Rewrites' workflow if needed"